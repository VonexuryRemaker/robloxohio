local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/RedzLibV5/main/Source.Lua"))()

local Window = redzlib:MakeWindow({
  Title = "KJ SCRIPT",
  SubTitle = "MADE BY LLOYD AND HONOREDHUB",
  SaveFolder = "BIG DICK DADDY"
})

--Tabs

local Tab1 = Window:MakeTab({"Unlock KJ", "YOU ARE POOR LOL👍"})

--Buttons

Tab1:AddButton({"Unlock KJ", function()
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Function to delete all tools from the player's inventory
local function deleteInventory()
    -- Delete tools from Backpack
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") or tool:IsA("HopperBin") then
            tool:Destroy()
        end
    end

    -- Delete tools from the character's hands
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") or tool:IsA("HopperBin") then
            tool:Destroy()
        end
    end
end

-- Initial run to delete inventory
deleteInventory()

-- Update the function if the player's character changes
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    deleteInventory()
end)


wait(0.5)


local tool = Instance.new("Tool")
tool.Name = "Ravage"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://pastebin.com/raw/TkDgjpVw"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

local tool = Instance.new("Tool")
tool.Name = "Swift Steep"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/VonexuryRemaker/If-sigma-ever-edged-how-would-u-become-skibidi/main/Goku"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

local tool = Instance.new("Tool")
tool.Name = "Collateral Ruin"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://pastebin.com/raw/huh4brpa"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

local Players = game:GetService("Players")

        local player = Players.LocalPlayer
        
        local character = player.Character or player.CharacterAdded:Wait()
        
        local humanoid = character:WaitForChild("Humanoid")
        
        
        local animationIdsToStop = {
        
            [10469493270] = true,
        
            [10469630950] = true,
        
            [10469639222] = true,
        
            [10469643643] = true,
        
        }
        
        
        local replacementAnimations = {
        
            ["10469643643"] = "rbxassetid://17325537719",
        
            ["10469639222"] = "rbxassetid://17325522388",
        
            ["10469630950"] = "rbxassetid://17325513870",
        
            ["10469493270"] = "rbxassetid://17325510002",
        
        }
        
        
        local queue = {}
        
        local isAnimating = false
        
        
        local function playReplacementAnimation(animationId)
        
            if isAnimating then
        
                table.insert(queue, animationId)
        
                return
        
            end
        
           
        
            isAnimating = true
        
            local replacementAnimationId = replacementAnimations[tostring(animationId)]
        
            if replacementAnimationId then
        
                local AnimAnim = Instance.new("Animation")
        
                AnimAnim.AnimationId = replacementAnimationId
        
                local Anim = humanoid:LoadAnimation(AnimAnim)
        
                AnimAnim.AnimationId = "rbxassetid://0"
        
                Anim:Play()
        
               
        
                Anim.Stopped:Connect(function()
        
                    isAnimating = false
        
                    if #queue > 0 then
        
                        local nextAnimationId = table.remove(queue, 1)
        
                        playReplacementAnimation(nextAnimationId)
        
                    end
        
                end)
        
            else
        
                isAnimating = false
        
            end
        
        end
        
        
        local function stopSpecificAnimations()
        
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        
                local animationId = tonumber(track.Animation.AnimationId:match("%d+"))
        
                if animationIdsToStop[animationId] then
        
                    track:Stop()
        
                end
        
            end
        
        end
        
        
        local function onAnimationPlayed(animationTrack)
        
            local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))
        
            if animationIdsToStop[animationId] then
        
                stopSpecificAnimations()
        
                animationTrack:Stop()
        
               
        
                local replacementAnimationId = replacementAnimations[tostring(animationId)]
        
                if replacementAnimationId then
        
                    playReplacementAnimation(animationId)
        
                end
        
            end
        
        end
        
        
        humanoid.AnimationPlayed:Connect(onAnimationPlayed)
        
        
        local player = game.Players.LocalPlayer
        
        local character = player.Character or player.CharacterAdded:Wait()
        
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        
        local function onBodyVelocityAdded(bodyVelocity)
        
            if bodyVelocity:IsA("BodyVelocity") then
        
                bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)
        
            end
        
        end
        
        
        character.DescendantAdded:Connect(onBodyVelocityAdded)
        
        
        for _, descendant in pairs(character:GetDescendants()) do
        
            onBodyVelocityAdded(descendant)
        
        end
        
        
        player.CharacterAdded:Connect(function(newCharacter)
        
            character = newCharacter
        
            humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
            character.DescendantAdded:Connect(onBodyVelocityAdded)
        
           
        
            for _, descendant in pairs(character:GetDescendants()) do
        
                onBodyVelocityAdded(descendant)
        
            end
        
        end)


wait(0)


local plr = game.Players.LocalPlayer
local gui = plr.PlayerGui
local ulttext = gui.ScreenGui.MagicHealth.TextLabel

ulttext.Text = "20 SERIES"


wait(0)


local p = game.Players.LocalPlayer
local s = function(c)
    local r = game:GetService("ReplicatedStorage")
    local t = r:FindFirstChild("Resources")
    if t then
        local u = t:FindFirstChild("le phone")
        if u then
            local v = u:Clone()
            v.Parent = c


            local w = c:FindFirstChild("RightHand") or c:FindFirstChild("Right Arm")
            if w then
                if not v.PrimaryPart then
                    local basePart = v:FindFirstChildWhichIsA("BasePart")
                    if basePart then
                        v.PrimaryPart = basePart
                    else
                        return
                    end
                end
                
                local x = Instance.new("Weld")
                x.Part0 = w
                x.Part1 = v.PrimaryPart
                x.C0 = CFrame.new(0, -1, 0)
                x.Parent = w


                v:SetPrimaryPartCFrame(w.CFrame * CFrame.new(0, -1, 0))


                -- Play the animation
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://17325160621"
                
                local animTrack = c.Humanoid:LoadAnimation(anim)
                animTrack:Play()


                -- Create and play the sound
                local sound = Instance.new("Sound")
                sound.SoundId = "rbxassetid://17325174223"
                sound.Parent = c.Torso or c:FindFirstChild("UpperTorso") -- Adjust if using R6 or R15
                sound:Play()
                
                -- Delete the model after 1.0 seconds
                delay(1.0, function()
                    if v and v.Parent then
                        v:Destroy()


local p = game.Players.LocalPlayer
local a = p.Character
local x = game:GetService("ReplicatedStorage")
local v = game:GetService("Workspace")


local function r()
    local s = x:FindFirstChild("Resources")
    if not s then return end


    local m = s:FindFirstChild("PhonePhysicsTest")
    if not m then return end


    local c = m:Clone()


    local h = a:FindFirstChild("Head")
    if not h then return end


    local d = h.CFrame.LookVector
    local o = h.Position + d * 0.5


    c:SetPrimaryPartCFrame(CFrame.new(o))
    c.Parent = v


    wait(5.3)
    if c and c.Parent then
        c:Destroy()
    end
end


r()


                    end
                end)
            end
        end
    end
end


p.CharacterAdded:Connect(s)
if p.Character then
    s(p.Character)
end


wait(0)


local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Define the target and replacement animation IDs
local oldAnimID = "15955393872"
local newAnimID = "18447913645"
local soundID = "18443048724"

-- Function to load and run the cinematic module
local function playCinematic()
function Cinematic(moduleData)
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local camera = game.Workspace.CurrentCamera
local CinematicsModule = moduleData
local CurrentCameraCFrame = camera.CFrame
local FrameTime = 0
local Connection

character.Humanoid.AutoRotate = false
camera.CameraType = Enum.CameraType.Scriptable

Connection = RunService.RenderStepped:Connect(function(DT)
FrameTime += DT * 60
local NeededFrame = CinematicsModule[math.ceil(FrameTime)]

if NeededFrame then
TweenService:Create(camera, TweenInfo.new(0.015, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
CFrame = character.HumanoidRootPart.CFrame * NeededFrame.cframe
}):Play()
camera.FieldOfView = NeededFrame.fov
else
Connection:Disconnect()
camera.FieldOfView = 70
character.Humanoid.AutoRotate = true
camera.CameraType = Enum.CameraType.Custom
camera.CFrame = CurrentCameraCFrame
end
end)
end

Cinematic(loadstring(game:HttpGet('https://raw.githubusercontent.com/AlperPro/shhh/main/wallcombo.lua'))())
end

-- Function to replace animation, play new animation, and play sound
local function replaceAndPlayAnimation()
local humanoid = character:WaitForChild("Humanoid")

-- Hook into AnimationPlayed event
humanoid.AnimationPlayed:Connect(function(animationTrack)
local animAnim = Instance.new("Animation")

-- Check if the played animation has the old animation ID
if animationTrack.Animation.AnimationId == "rbxassetid://" .. oldAnimID then
-- Set new animation ID
animAnim.AnimationId = "rbxassetid://" .. newAnimID

-- Load and play new animation
local anim = humanoid:LoadAnimation(animAnim)
animAnim.AnimationId = "rbxassetid://0" -- Reset animation ID
anim:Play()

-- Stop the old animation
animationTrack:Stop()

-- Play the cinematic
playCinematic()

-- Play the sound
local sound = Instance.new("Sound", character)
sound.SoundId = "rbxassetid://" .. soundID
sound:Play()
end
end)
end

-- Initial run to set up animation replacement and sound playing
replaceAndPlayAnimation()

-- Update the function if the player's character changes
player.CharacterAdded:Connect(function(newCharacter)
character = newCharacter
replaceAndPlayAnimation()
end)


wait(0)


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Define the target and replacement animation IDs
local oldAnimID = "12447707844"
local newAnimID = "17140902079"
local soundID1 = "17150550559"
local soundID2 = "17150550302"

-- Function to play sounds
local function playSounds()
local sound1 = Instance.new("Sound", character)
sound1.SoundId = "rbxassetid://" .. soundID1
sound1:Play()

local sound2 = Instance.new("Sound", character)
sound2.SoundId = "rbxassetid://" .. soundID2
sound2:Play()
end

-- Function to clone and emit particle effects including the new ones
local function playEffects()
-- EmitBatch3 Effect
local EmitBatch3 = ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch3:Clone()
EmitBatch3.Parent = character:WaitForChild("HumanoidRootPart")
for _, child in ipairs(EmitBatch3:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- EmitBatch1 Effect
local EmitBatch1 = ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch1:Clone()
EmitBatch1.Parent = character:WaitForChild("HumanoidRootPart")
for _, child in ipairs(EmitBatch1:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- EmitBatch2 Effect
local EmitBatch2 = ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch2:Clone()
EmitBatch2.Parent = character:WaitForChild("HumanoidRootPart")
for _, child in ipairs(EmitBatch2:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Sparkles1 Effect
local sparkles1 = ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch3:Clone()
sparkles1.Parent = character:WaitForChild("Torso")
for _, child in ipairs(sparkles1:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Fine Effect
local fine = ReplicatedStorage.Resources.KJEffects["fine...1"].EnableBatch2:Clone()
fine.Parent = character:WaitForChild("Torso")
for _, child in ipairs(fine:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Red Effect
local red = ReplicatedStorage.Resources.KJEffects["fine...1"].REDDDD1:Clone()
red.Parent = character:WaitForChild("Right Leg")
for _, child in ipairs(red:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Red2 Effect
local red2 = ReplicatedStorage.Resources.KJEffects["fine...1"].REDDDD2:Clone()
red2.Parent = character:WaitForChild("Left Leg")
for _, child in ipairs(red2:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Red3 Effect
local red3 = ReplicatedStorage.Resources.KJEffects["fine...1"].REDDDD3:Clone()
red3.Parent = character:WaitForChild("Left Leg")
for _, child in ipairs(red3:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Red4 Effect
local red4 = ReplicatedStorage.Resources.KJEffects["fine...1"].REDDDD4:Clone()
red4.Parent = character:WaitForChild("Right Leg")
for _, child in ipairs(red4:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

-- Schedule destruction of Effects
delay(8.2, function()
fine:Destroy()
red:Destroy()
red2:Destroy()
red3:Destroy()
red4:Destroy()

local fine2 = ReplicatedStorage.Resources.KJEffects["fine...Emit2"].EmitBatch1:Clone()
fine2.Parent = character:WaitForChild("Right Arm")
for _, child in ipairs(fine2:GetChildren()) do
if child:IsA("ParticleEmitter") then
child:Emit(1) -- Emit 1 particle
end
end

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Function to delete all tools from the player's inventory
local function deleteInventory()
    -- Delete tools from Backpack
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") or tool:IsA("HopperBin") then
            tool:Destroy()
        end
    end

    -- Delete tools from the character's hands
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") or tool:IsA("HopperBin") then
            tool:Destroy()
        end
    end
end

-- Initial run to delete inventory
deleteInventory()

local tool = Instance.new("Tool")
tool.Name = "Stoic Bomb"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://pastebin.com/raw/B0nzYjmy"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

local tool = Instance.new("Tool")
tool.Name = "20 - 20 - 20 Dropkick"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/VonexuryRemaker/If-sigma-ever-edged-how-would-u-become-skibidi/main/DUDE"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

local tool = Instance.new("Tool")
tool.Name = "Five Seasons"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.ToolTip = "A move from KJ."

local function activateTool()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/VonexuryRemaker/robloxohio/main/howtomakeskibiditoilet"))()
end

local equippedConnection
equippedConnection = tool.Equipped:Connect(function()
    activateTool()
end)

tool.Parent = game.Players.LocalPlayer.Backpack

-- Update the function if the player's character changes
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    deleteInventory()
end)

player.Character.HumanoidRootPart.Anchored = false
end)
end

-- Function to replace animation and apply provided code
local function replaceAnimationWithCode()
local humanoid = character:WaitForChild("Humanoid")

-- Hook into AnimationPlayed event
humanoid.AnimationPlayed:Connect(function(animationTrack)
-- Check if the played animation has the old animation ID
if animationTrack.Animation.AnimationId == "rbxassetid://" .. oldAnimID then
animationTrack:Stop()  -- Stop the old animation before it plays

-- Set up and play the new animation
local animAnim = Instance.new("Animation")
animAnim.AnimationId = "rbxassetid://" .. newAnimID
local anim = humanoid:LoadAnimation(animAnim)
animAnim.AnimationId = "rbxassetid://0" -- Reset animation ID
anim:Play()

-- Play the particle effects and sounds
playEffects()
playSounds()
end
end)
end

-- Call the function initially
replaceAnimationWithCode()

-- Update the function if the player's character changes
player.CharacterAdded:Connect(function(newCharacter)
character = newCharacter
replaceAnimationWithCode()
end)
print("Hello World!")
end})

Tab1:AddButton({"KJ ULTIMATE 2", function()
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")
 
local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://18445236460"
local Anim = Humanoid:LoadAnimation(AnimAnim)
AnimAnim.AnimationId = "rbxassetid://0" -- Reset animation ID
Anim:Play()

local soundeffect = Instance.new("Sound")
soundeffect.SoundId = "rbxassetid://18445228136"
soundeffect.Parent = game.Players.LocalPlayer.Character.Torso
soundeffect:Play()
soundeffect.Volume = 1

local soundeffect = Instance.new("Sound")
soundeffect.SoundId = "rbxassetid://18445228824"
soundeffect.Parent = game.Players.LocalPlayer.Character.Torso
soundeffect:Play()
soundeffect.Volume = 1

local soundeffect = Instance.new("Sound")
soundeffect.SoundId = "rbxassetid://18445227792"
soundeffect.Parent = game.Players.LocalPlayer.Character.Torso
soundeffect:Play()
soundeffect.Volume = 1

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Function to make the player walk forward by 5 feet
local function walkForwardByFiveFeet()
-- Set the Humanoid's WalkSpeed to 13
local oldWalkSpeed = humanoid.WalkSpeed
humanoid.WalkSpeed = 13

local currentPosition = humanoidRootPart.Position
local forwardVector = humanoidRootPart.CFrame.LookVector * (5 * 5.3048) -- 5 feet converted to meters
local targetPosition = currentPosition + forwardVector

-- Use Humanoid to move to the target position
humanoid:MoveTo(targetPosition)

-- Optionally, wait for the move to complete
humanoid.MoveToFinished:Wait()

-- Reset the Humanoid's WalkSpeed to its original value
humanoid.WalkSpeed = oldWalkSpeed
end

-- Call the function to make the player walk forward 5 feet
walkForwardByFiveFeet()


wait(0)


local fine2 = game.ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch1:Clone()
fine2.Parent = game.Players.LocalPlayer.Character["Left Arm"]
    for _, child in ipairs(fine2:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(20) -- Emit 20 particles
        end
    end
local fine3 = game.ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch2:Clone()
fine3.Parent = game.Players.LocalPlayer.Character["Torso"]
    for _, child in ipairs(fine3:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
    end
local sparkles1 = game.ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch3:Clone()
sparkles1.Parent = game.Players.LocalPlayer.Character["Torso"]
    for _, child in ipairs(sparkles1:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
    end
local twisty1 = game.ReplicatedStorage.Resources.KJEffects["fine...Emit"].EmitBatch1:Clone()
twisty1.Parent = game.Players.LocalPlayer.Character["Torso"]
    for _, child in ipairs(twisty1:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
    end
local leap1 = game.ReplicatedStorage.Resources.KJEffects["LeapParticles"].Leap:Clone()
leap1.Parent = game.Players.LocalPlayer.Character["Torso"]
    for _, child in ipairs(leap1:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(1) -- Emit 20 particles
        end
    end
local boom1 = game.ReplicatedStorage.Resources.KJEffects["SpinningSmoke"].Smoke:Clone()
boom1.Parent = game.Players.LocalPlayer.Character["Torso"]
    for _, child in ipairs(boom1:GetChildren()) do
        if child:IsA("ParticleEmitter") then -- Check if the child is a ParticleEmitter
            child:Emit(60) -- Emit 20 particles
        end
    end
print("Hello World!")
end})
